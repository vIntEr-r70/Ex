object DtLevel
{
    uInt16 select_mask_[10];
    object<nick_devices, dt10> dt_[10];
    
    start()
    {
        async
        {
            for (uInt32 i = 0; i < 10; ++i)
                dt_[i].start(select_mask_[i]);
        }
            
        exception
        {
            stop();
        }
    }
    
    stop()
    {
        async
        {
            for (uInt32 i = 0; i < 10; ++i)
                dt_[i].start(0);
        }
    }
}

object Launcher
{
    DtLevel levels_[4];
    
    start()
    {
        async
        {
            for (uInt32 i = 0; i < 4; ++i)
                levels_[i].start();
        }
        
        exception
        {
            stop();
        }
    }
    
    stop()
    {
        async
        {
            for (uInt32 i = 0; i < 4; ++i)
                levels_[i].stop();
        }
    }
    
} launcher;

template GuiTemplate
{
    size: { w: 800, h: 600 }
    bgcolor: 0x808080
    
    vLayout
    {
        uInt32 page_id_;
        uInt32 sub_id_[4];
    
        hLayout
        {
            for (uInt32 i = 0; i < 4; ++i)
            {
                ToggleButton
                {
                    checked: { page_id_ == i; }
                    bgcolor: { (page_id_ == i) ? 0x00FF00 : nill; }
                    
                    clicked(bool state)
                    {
                        if (!state)
                            return;
                            
                        page_id_ = i;
                        gui_settings_handler::switch_page(i * 100 + sub_id_[i] * 10);
                    }
                }
            }
        }
        
        hLayout
        {
            for (uInt32 i = 0; i < 10; ++i)
            {
                ToggleButton
                {
                    checked: { sub_id_[page_id_] == i; }
                    bgcolor: { (sub_id_[page_id_] == i) ? 0x00FF00 : nill; }

                    clicked(bool state)
                    {
                        if (!state)
                            return;
                        
                        sub_id_[page_id_] = i;
                        gui_settings_handler::switch_page(page_id_ * 100 + i * 10);
                    }
                }
            }
        }
        
        for (uInt32 i = 0; i < 10; ++i)
        {
            hLayout
            {
                ToggleButton;
            
                Button;
                Button;
                Label;
                Button;
                Button;
                
                Button;
                Label;
                Button;
                
                Button;
            }
        }
    }
}



main()
{
    object<qt4> gui(GuiTemplate); 
    gui.exec();
}



